# -*- coding: utf-8 -*-
"""3DESImplementation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WE7IN0Lku730EFRdadJjlZ-HV-ZVtkFD
"""

!pip install pycrypto

"""Assignment: 3DES Implementation
Name: John Michael Benedict P. Lingad
ID Number: 152516
E-mail Address: john.lingad@obf.ateneo.edu
"""

import base64
import hashlib
from Crypto import Random
from Crypto.Cipher import DES3

class DES3Cipher(object):
  
  def __init__(self, key):
    self.key = hashlib.sha256(key.encode()).digest()[:16];
    #self.bs = DES3.block_size*2;
  
  def encrypt(self, raw):
    #raw = self.pad(raw)
    iv = Random.new().read(DES3.block_size)
    cipher = DES3.new(self.key, DES3.MODE_CFB, iv);
    
    return base64.b64encode(iv + cipher.encrypt(raw))
  
  def decrypt(self, enc):
    enc = base64.b64decode(enc)
    iv = enc[:DES3.block_size]
    cipher = DES3.new(self.key, DES3.MODE_CFB, iv)
    return cipher.decrypt(enc[DES3.block_size:])
    #return self.unpad(cipher.decrypt(enc[DES3.block_size:])).decode('utf-8')
    
  def pad(self, s):
    return s + (self.bs - len(s) % self.bs) * chr(self.bs - len(s) % self.bs)
  
  @staticmethod
  def unpad(s):
    return s[:-ord(s[len(s)-1:])]

cipher = DES3Cipher("This is an easy assignment")
ciphertext = cipher.encrypt(b'Using pycrypto encrypt the text of this assignment using the passphase "This is an easy assignment" using 2TDES (2 key triple DES) in CFB mode. Make sure you copy and paste just the text and no other spurious characters. You should only submit the ciphertext that is BASE64 encoded. This can be worked on by groups but each must submit their own answers.')

print ciphertext

print (cipher.decrypt(ciphertext))